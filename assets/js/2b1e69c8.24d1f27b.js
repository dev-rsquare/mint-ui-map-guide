"use strict";(self.webpackChunkmint_ui_map_guide=self.webpackChunkmint_ui_map_guide||[]).push([[1350],{2155:(e,t,n)=>{n.d(t,{rM:()=>r});var i=n(9788),l=n(7294),o=n(4736);const a=new i.Position(37.4004906706981,127.107806987924);function r(){const e=(0,l.useRef)(),[t,n]=(0,l.useState)(null),[r]=(0,l.useState)(d(a,100)),u=(0,l.useMemo)((()=>{if(!t||!e.current)return null;const n=e.current.mapDivElement,o=(0,i.getClusterInfo)(50,t,n.offsetWidth,n.offsetHeight,r),a=Math.max(...o.map((e=>e.itemList.length))),u=e=>e/a*50;return l.createElement(l.Fragment,null,o.map(((e,t)=>{const n=u(e.itemList.length);return l.createElement(i.CircleMarker,{key:`circle-${t}`,center:e.centerPosition,radius:n,background:"orange",shapeProperties:{stroke:"red",fillOpacity:.5}},l.createElement("div",{style:{display:"flex",justifyContent:"center",alignItems:"center",height:"100%",fontSize:"20px"}},e.itemList.length))})))}),[r,t]);return l.createElement(o.D,{base:{center:a,zoomLevel:12},onLoad:(t,n)=>{e.current=n,n.panningTo(a)},onBoundsChanged:e=>{!t&&n(e)}},u)}const u=()=>Math.ceil(50*Math.random()),s=()=>Math.random()>.5?1:-1,c=(e,t)=>new i.Position(e+.0015*u()*s(),t+.0015*u()*s()),d=(e,t)=>{const n=[],{lat:i,lng:l}=e,o=new Set,a=e=>{for(;;){const t={...c(i,l),no:e+1,key:String(e+1)},n=`${t.lat}${t.lng}`;if(!o.has(n))return o.add(n),t.key=n,t}};for(let r=0;r<t;r++)n.push(a(r));return n}},4736:(e,t,n)=>{n.d(t,{D:()=>r});var i=n(7462),l=n(2263),o=n(9788),a=n(7294);function r(e){let{mapKey:t,mapType:n="google",base:r={center:new o.Position(-25.344,131.031),zoomLevel:12},h:u="500px",children:s,...c}=e;const[d,p]=(0,a.useState)(n);(0,a.useEffect)((()=>{p(n)}),[n]);const{siteConfig:{customFields:m}}=(0,l.Z)();return a.createElement("div",{style:{height:u,display:"flex",flexDirection:"column",marginBottom:"25px"}},a.createElement("div",{style:{flex:"0 0 50px",display:"flex",justifyContent:"flex-end",alignItems:"center"}},a.createElement("select",{value:d,onChange:e=>{p(e.target.value)}},a.createElement("option",{value:"google"},"Google"),a.createElement("option",{value:"naver"},"Naver"))),a.createElement("div",{style:{flex:"1 1 auto"}},a.createElement(o.MintMap,(0,i.Z)({mapKey:t||String(m[`${d}MapKey`]),mapType:d,base:r},c),s)))}},747:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>m,frontMatter:()=>a,metadata:()=>u,toc:()=>c});var i=n(7462),l=(n(7294),n(3905)),o=n(2155);const a={},r="\uc720\uc6a9\ud55c \uae30\ub2a5",u={unversionedId:"advanced-guides/util",id:"advanced-guides/util",title:"\uc720\uc6a9\ud55c \uae30\ub2a5",description:"\ud3f4\ub9ac\uace4 \uad00\ub828 \uacc4\uc0b0",source:"@site/docs/advanced-guides/util.mdx",sourceDirName:"advanced-guides",slug:"/advanced-guides/util",permalink:"/mint-ui-map-guide/docs/advanced-guides/util",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"\uc624\ubc84\ub808\uc774 - \ud3f4\ub9ac\ub77c\uc778",permalink:"/mint-ui-map-guide/docs/guides/overlay-polyline"},next:{title:"MintMapController",permalink:"/mint-ui-map-guide/docs/advanced-guides/map-controller"}},s={},c=[{value:"\ud3f4\ub9ac\uace4 \uad00\ub828 \uacc4\uc0b0",id:"\ud3f4\ub9ac\uace4-\uad00\ub828-\uacc4\uc0b0",level:2},{value:"getRegionInfo",id:"getregioninfo",level:3},{value:"getRegionStart",id:"getregionstart",level:3},{value:"getRegionEnd",id:"getregionend",level:3},{value:"getCenter",id:"getcenter",level:3},{value:"intersects",id:"intersects",level:3},{value:"getIncludedPositions",id:"getincludedpositions",level:3},{value:"simplifyPoints",id:"simplifypoints",level:3},{value:"calculatePolygonSize",id:"calculatepolygonsize",level:3},{value:"\uc9c0\ub9ac \uad00\ub828 \uacc4\uc0b0",id:"\uc9c0\ub9ac-\uad00\ub828-\uacc4\uc0b0",level:2},{value:"computeDistanceKiloMeter",id:"computedistancekilometer",level:3},{value:"convertMeterToLatitudeValue",id:"convertmetertolatitudevalue",level:3},{value:"convertLatitudeToMeterValue",id:"convertlatitudetometervalue",level:3},{value:"convertLongitudeToMeterValue",id:"convertlongitudetometervalue",level:3},{value:"\uae30\ud0c0 \uae30\ub2a5",id:"\uae30\ud0c0-\uae30\ub2a5",level:2},{value:"getMapOfType",id:"getmapoftype",level:3},{value:"getClusterInfo",id:"getclusterinfo",level:3}],d={toc:c},p="wrapper";function m(e){let{components:t,...a}=e;return(0,l.kt)(p,(0,i.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"\uc720\uc6a9\ud55c-\uae30\ub2a5"},"\uc720\uc6a9\ud55c \uae30\ub2a5"),(0,l.kt)("h2",{id:"\ud3f4\ub9ac\uace4-\uad00\ub828-\uacc4\uc0b0"},"\ud3f4\ub9ac\uace4 \uad00\ub828 \uacc4\uc0b0"),(0,l.kt)("p",null,"PolygonCalculator \uc5d0\uc11c\ub294 \ud3f4\ub9ac\uace4 \uad00\ub828 \uacc4\uc0b0 \uae30\ub2a5\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4."),(0,l.kt)("h3",{id:"getregioninfo"},"getRegionInfo"),(0,l.kt)("p",null,"\uc88c\ud45c\uc758 \ubc30\uc5f4\uc744 \ubc1b\uc544\uc11c \uc88c\ud45c\ub97c \ubaa8\ub450 \ud3ec\ud568\ud558\ub294 \uc0ac\uac01\ud615\uc758 \uc815\ubcf4\ub97c \ub9ac\ud134\ud569\ub2c8\ub2e4.\n(maxLat, minLat, maxLng, minLng, centerLat, centerLng)"),(0,l.kt)("p",null,(0,l.kt)("img",{src:n(3553).Z,width:"631",height:"433"})),(0,l.kt)("p",null,"\uc704\uc758 \uadf8\ub9bc\uc744 \ubcf4\uba74 \uc0ac\uac01\ud615\uc774 \uc5b4\ub5a4 \uc601\uc5ed\uc5d0 \uc704\uce58\ud558\ub294\uc9c0 \uc54c \uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,l.kt)("p",null,"\uc774 \uc815\ubcf4\ub97c \uc774\uc6a9\ud558\uba74 \uc5ec\ub7ec \uc88c\ud45c\uc758 \ubd84\ud3ec\uc5d0 \ub530\ub77c \ubdf0\ud3ec\ud2b8\uc5d0\uc11c \uc13c\ud130\ub97c \uc790\ub3d9\uc73c\ub85c \uc801\uc808\ud788 \uc774\ub3d9\ud574\uc8fc\uac70\ub098 panning \ucc98\ub9ac\ud560\ub54c \uc720\uc6a9\ud558\uac8c \uc4f8 \uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,l.kt)("h3",{id:"getregionstart"},"getRegionStart"),(0,l.kt)("p",null,"getRegionInfo \ub85c \uc5bb\uc740 \uc0ac\uac01\ud615\uc758 minimum Position \uac12\uc785\ub2c8\ub2e4."),(0,l.kt)("h3",{id:"getregionend"},"getRegionEnd"),(0,l.kt)("p",null,"getRegionInfo \ub85c \uc5bb\uc740 \uc0ac\uac01\ud615\uc758 maximum Position \uac12\uc785\ub2c8\ub2e4."),(0,l.kt)("h3",{id:"getcenter"},"getCenter"),(0,l.kt)("p",null,"getRegionInfo \ub85c \uc5bb\uc740 \uc0ac\uac01\ud615\uc758 center Position \uac12\uc785\ub2c8\ub2e4."),(0,l.kt)("h3",{id:"intersects"},"intersects"),(0,l.kt)("p",null,"\uc88c\ud45c\ub85c \uad6c\uc131\ub41c \uc11c\ub85c \ub2e4\ub978 \ub450 \ud3f4\ub9ac\uace4 path (Position[]) \uac04\uc5d0 \uad50\ucc28\uc810\uc774 \ud558\ub098\ub77c\ub3c4 \uc788\ub294\uc9c0 \uccb4\ud06c\ud558\ub294 \uae30\ub2a5\uc785\ub2c8\ub2e4."),(0,l.kt)("p",null,"\ud3f4\ub9ac\uace4\uc774\ub098 \ub77c\uc778 \ub4f1\uc774 \uc11c\ub85c \uacb9\uce58\ub294\uc9c0 \ud310\ub2e8\ud560 \ub54c \uc720\uc6a9\ud569\ub2c8\ub2e4."),(0,l.kt)("h3",{id:"getincludedpositions"},"getIncludedPositions"),(0,l.kt)("p",null,"\uc8fc\uc5b4\uc9c4 \ud3f4\ub9ac\uace4 \uc548\uc5d0 \ud2b9\uc815 \uc88c\ud45c\ub4e4\uc774 \ud3ec\ud568\ub418\ub294\uc9c0 \uccb4\ud06c\ud558\ub294 \uae30\ub2a5\uc785\ub2c8\ub2e4."),(0,l.kt)("p",null,"\ubc94\uc704\ub97c \uc9c0\uc815\ud558\uc5ec \uadf8 \uc548\uc5d0 \ub4e4\uc5b4\uc624\ub294 \uc88c\ud45c\ub4e4\uc744 \ucc3e\uc544\ub0bc \ub54c \uc720\uc6a9\ud569\ub2c8\ub2e4."),(0,l.kt)("h3",{id:"simplifypoints"},"simplifyPoints"),(0,l.kt)("p",null,"\uc8fc\uc5b4\uc9c4 \ud3f4\ub9ac\uace4 \uc88c\ud45c\ub97c \ub2e8\uc21c\ud654 \ucc98\ub9ac\ud569\ub2c8\ub2e4."),(0,l.kt)("p",null,"\ubcf4\ud1b5 \uc2dc\ub3c4\uc758 \uacbd\uacc4\uc640 \uac19\uc740 \ub370\uc774\ud130\uc758 \uc6d0\ubcf8\uc740 \ud45c\ud604\ud560 \ub9f5\uc758 \ucd95\ucc99\uc5d0 \ube44\ud574 \ub108\ubb34 \ud070 \uacbd\uc6b0\uac00 \ub9ce\uc2b5\ub2c8\ub2e4.\n\uc774\ub97c \ub2e8\uc21c\ud654\ud558\uba74 \ubcf4\uae30\uc5d0\ub3c4 \uae54\ub054\ud574\uc9c0\uace0 \uc131\ub2a5\uc801\uc73c\ub85c\ub3c4 \uc880 \ub354 \ub098\uc740 \uacb0\uacfc\ub97c \uc5bb\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,l.kt)("p",null,"tolerance \ud30c\ub77c\ubbf8\ud130\ub294 \ub2e8\uc21c\ud654 \ucc98\ub9ac\ud560 \uae30\uc900 \uac70\ub9ac\uac12 \uc785\ub2c8\ub2e4. \uae30\ubcf8\uac12\uc740 1 \uc785\ub2c8\ub2e4."),(0,l.kt)("h3",{id:"calculatepolygonsize"},"calculatePolygonSize"),(0,l.kt)("p",null,"\uc8fc\uc5b4\uc9c4 \ud3f4\ub9ac\uace4\uc758 \uba74\uc801\uc744 \uad6c\ud569\ub2c8\ub2e4. \ub2e8\uc704\ub294 m2 \uc785\ub2c8\ub2e4."),(0,l.kt)("h2",{id:"\uc9c0\ub9ac-\uad00\ub828-\uacc4\uc0b0"},"\uc9c0\ub9ac \uad00\ub828 \uacc4\uc0b0"),(0,l.kt)("p",null,"GeoCalulator \ub294 \uc88c\ud45c\uc640 \uac70\ub9ac \uad00\ub828\ub41c \uacc4\uc0b0 \uae30\ub2a5\uc774 \uc81c\uacf5\ub429\ub2c8\ub2e4."),(0,l.kt)("h3",{id:"computedistancekilometer"},"computeDistanceKiloMeter"),(0,l.kt)("p",null,"\ub450 \uc88c\ud45c \uc0ac\uc774\uc758 \uac70\ub9ac\ub97c \uad6c\ud569\ub2c8\ub2e4. (\ub2e8\uc704\ub294 km)"),(0,l.kt)("h3",{id:"convertmetertolatitudevalue"},"convertMeterToLatitudeValue"),(0,l.kt)("p",null,"\ubbf8\ud130\uac12\uc744 latitude \uac12\uc73c\ub85c \ubcc0\ud658\ud569\ub2c8\ub2e4.\n\ud2b9\uc815 \uc88c\ud45c\uc5d0\uc11c xx \ubbf8\ud130 \ub5a8\uc5b4\uc9c4 \uc88c\ud45c\ub97c \uad6c\ud560 \ub54c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,l.kt)("h3",{id:"convertlatitudetometervalue"},"convertLatitudeToMeterValue"),(0,l.kt)("p",null,"latitude \uac12\uc744 \ubbf8\ud130\ub85c \ubcc0\ud658\ud569\ub2c8\ub2e4.\n\uc88c\ud45c\uac04\uc758 \uac70\ub9ac\ub97c \uc7b4\ub54c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,l.kt)("h3",{id:"convertlongitudetometervalue"},"convertLongitudeToMeterValue"),(0,l.kt)("p",null,"longitude \uac12\uc744 \ubbf8\ud130\ub85c \ubcc0\ud658\ud569\ub2c8\ub2e4.\nlongitude \uac12\uc740 latitude \uac12\uc5d0 \ub530\ub77c \ubcc0\ud558\ubbc0\ub85c latitude \uac12\ub3c4 \uc785\ub825\uc73c\ub85c \ud544\uc694\ud569\ub2c8\ub2e4."),(0,l.kt)("h2",{id:"\uae30\ud0c0-\uae30\ub2a5"},"\uae30\ud0c0 \uae30\ub2a5"),(0,l.kt)("h3",{id:"getmapoftype"},"getMapOfType"),(0,l.kt)("p",null,"native \uc9c0\ub3c4 \uac1d\uccb4\ub97c \uc5bb\uc744 \ub54c \uc0ac\uc6a9\ud569\ub2c8\ub2e4."),(0,l.kt)("p",null,"\uc5ec\ub7ec\uac00\uc9c0 \uc9c0\ub3c4\ub97c \ubaa8\ub450 \uc9c0\uc6d0\ud558\ub294 \uacbd\uc6b0 \ud2b9\uc815 \uc9c0\ub3c4\uc758 \uae30\ub2a5\uc744 \ud65c\uc6a9\ud558\uae30 \uc704\ud574\uc11c\ub294 \ub2e4\uc74c\uacfc \uac19\uc740 \ucf54\ub4dc\uac00 \uc874\uc7ac\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"const map = mintMapController.getMap();\nif(map instanceof naver.maps.Map){\n  ...\n}\n")),(0,l.kt)("p",null,"\uc704\uc758 \ucf54\ub4dc\ub294 naver \uc9c0\ub3c4 api \uac00 \ub85c\ub4dc\ub418\uc9c0 \uc54a\uc740 \uacbd\uc6b0\uc5d0\ub294 \ub7f0\ud0c0\uc784 \uc624\ub958\uac00 \ubc1c\uc0dd\ud558\uac8c \ub429\ub2c8\ub2e4. (window.naver.maps \uac1d\uccb4\uac00 \uc874\uc7ac\ud558\uc9c0 \uc54a\uc74c)"),(0,l.kt)("p",null,"\uc774\ub54c getMapOfType \uc744 \uc774\uc6a9\ud574\uc11c \ud2b9\uc815 native \uc9c0\ub3c4 \uac1d\uccb4\uac00 \uc788\ub294\uc9c0\ub97c \uccb4\ud06c\ud558\uba74 window.naver.maps \ub97c \uc548\uc804\ud558\uac8c \uac00\uc838\uc640\uc11c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"const naverMap = getMapOfType<naver.maps.Map>('naver', mintMapController.getMap());\nif(naverMap){\n  naverMap.morph(position, zoom, {\n    ...option\n  })\n}else{\n  ...\n}\n")),(0,l.kt)("h3",{id:"getclusterinfo"},"getClusterInfo"),(0,l.kt)("p",null,"\uc8fc\uc5b4\uc9c4 \uc870\uac74\uc5d0\uc11c \uc88c\ud45c \ubaa9\ub85d\uc5d0 \ub300\ud574 \ud074\ub7ec\uc2a4\ud130 \uc815\ubcf4\ub97c \uacc4\uc0b0\ud569\ub2c8\ub2e4. \ud074\ub77c\uc774\uc5b8\ud2b8\uc5d0\uc11c \uac04\ub2e8\ud788 \ud074\ub7ec\uc2a4\ud130 \ud615\ud0dc\ub97c \ub80c\ub354\ub9c1\ud560\ub54c \uc0ac\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"\ud604\uc7ac \ud654\uba74\uc758 \ubdf0\ud3ec\ud2b8\ub97c \uae30\uc900\uc73c\ub85c \uaca9\uc790\ub85c \ub098\ub204\uc5b4 \uacc4\uc0b0\ud558\ub294 \ubc29\uc2dd\uc774\ubbc0\ub85c \ud074\ub7ec\uc2a4\ud130 \ubaa8\uc591\uc774 \ub3d9\uc77c \uc88c\ud45c\uad70\uc5d0 \ub300\ud574 \ud56d\uc0c1 \ub3d9\uc77c\ud558\uc9c0\ub294 \uc54a\uc2b5\ub2c8\ub2e4. ")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},"import { Bounds, CircleMarker, ClusterInfo, MintMapController, Position, getClusterInfo } from '@mint-ui/map';\nimport React, { useMemo, useRef, useState } from 'react';\n\nimport { MintMap } from './common/BaseMap';\n\nconst CENTER = new Position(37.4004906706981, 127.107806987924);\n\nexport function ClusterSample() {\n  const mintController = useRef<MintMapController>();\n  const [ currBounds, setCurrBounds ] = useState<Bounds|null>(null);\n  const [ markers ] = useState<Position[]>(getRandomData(CENTER, 100)); // \ub79c\ub364\ud558\uac8c Position[] \uc0dd\uc131\n  const memo = useMemo(() => {\n    if (!currBounds || !mintController.current) {\n      return null;\n    }\n\n    // \uc9c0\ub3c4\uc758 \ucee8\ud14c\uc774\ub108 element\n    const elem = mintController.current.mapDivElement;\n\n    // \uae30\ubcf8 \ud06c\uae30 ( = \uaca9\uc790\uc758 \ud53d\uc140 \ud06c\uae30)\n    const baseSize = 50;\n\n    // \ud074\ub7ec\uc2a4\ud130 \uc815\ubcf4 \uad6c\ud558\uae30\n    const clusterList = getClusterInfo(baseSize, currBounds, elem.offsetWidth, elem.offsetHeight, markers) as ClusterInfo[];\n\n    // \uc0ac\uc774\uc988 \uacb0\uc815\n    const maxItemSize = Math.max(...clusterList.map((c) => c.itemList.length));\n    const getSize = (size:number) => baseSize * (size / maxItemSize);\n\n    return (\n      <>\n        {clusterList.map((item, idx) => {\n          // \ud074\ub7ec\uc2a4\ud130 \ud06c\uae30 \uc815\ud558\uae30\n          const baseSize = getSize(item.itemList.length);\n\n          return (\n            <CircleMarker\n              key={`circle-${idx}`}\n              center={item.centerPosition}\n              radius={baseSize}\n              background='orange'\n              shapeProperties={{ stroke: 'red', fillOpacity: 0.5 }}\n            ><div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100%', fontSize: '20px' }}>{item.itemList.length}</div>\n            </CircleMarker>\n          );\n        })}\n      </>\n    );\n  }, [ markers, currBounds ]);\n\n  return (\n    <MintMap\n      base={{ center: CENTER, zoomLevel: 12 }}\n      onLoad={(_v, c) => {\n        mintController.current = c;\n        c.panningTo(CENTER);\n      }}\n      onBoundsChanged={(b) => {\n        !currBounds && setCurrBounds(b);\n      }}\n    >{memo}\n    </MintMap>\n  );\n}\n\n")),(0,l.kt)(o.rM,{mdxType:"ClusterSample"}))}m.isMDXComponent=!0},3553:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/util_region_info-a8410e15b7b0df3ea8417277d6a06335.png"}}]);